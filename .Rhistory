arrange(cran,ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
select(cran,ip_id,package,size)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_tb = size_mb / 2^10)
mutate(cran3, size_mb = size/2^20,size_gb = size_mb / 2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts<-filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique<-select(pack_sum,unique>465)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
exit()
0
gather(students, sex, count, -grade)
students2
gather(students2,sex_class,column_count,-gather)
gather(students2,sex_class,column_count,-grade)
gather(students2,sex_class,count,-grade)
res<-gather(students2,sex_class,count,-grade)
res
?seperate
?separate
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
?spread()
?spread
submit()
extract_numeric("class5")
submit()
?mutate
submit()
submit()
submit()
submit()
submit()
reset()
?extract_numeric
submit()
0
data(mtcars)
d = data(mtcars)
d
library(datasets)
d1 <- data(mtcars)
?data
data()
x <- data(mtcars)
x <- data("mtcars")
data(mtcars)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))
d <- data(mtcars)
data(mtcars)
names(mtcars)
coef(lm(mpg~wt,data = mtcars))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))
myPlot <- function(beta){
y-(0.59*x)
(y-(0.59*x))^2
sum((y-(0.59*x))^2)
sum((y+(1.71*x))^2)
sum((y+(0.044*x))^2)
sum((y-(0.8263*x))^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))
mean(x)
mean(y)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
lamda<-0.2
th_mean<-(1/lamda)
mns <- NULL
for (i in 1 : 1000) mns<-c(mns, mean(rexp(40,lamda)))
mean(mns)\
mean(mns)
hist(mns)
th_var <- (1/lambda)^2
th_var <- (1/lamda)^2
var(mns)
sd(mns)
0.789/sqrt(40)
0.124^2
25(sqrt(40))
25/(sqrt(40))
library(manipulate)
means <- NULL
for (i in 1 : 1000) means<-c(means, mean(rexp(40,lamda)))
means <- NULL
for (i in 1 : 1000) means<-c(means, mean(rexp(40,lamda)))
lambda<-0.2
means <- NULL
for (i in 1 : 1000) means<-c(means, mean(rexp(40,lamda)))
lamda <- 0.2
means <- NULL
for (i in 1 : 1000) means<-c(means, mean(rexp(40,lamda)))
myHist <- function(mu){
g <- ggplot(aes(x = means))
g <- g + geom_histogram(fill = "salmon",binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((means - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(3,7, step = 0.1))
library(ggplot)
library(ggplot2)
myHist <- function(mu){
g <- ggplot(aes(x = means))
g <- g + geom_histogram(fill = "salmon",binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((means - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(3,7, step = 0.1))
g <- ggplot(aes(x = means))
myHist <- function(mu){
hist(means)
mse <- round(mean((means - mu)^2), 3)}
manipulate(myHist(mu), mu = slider(3,7, step = 0.1))
myHist <- function(mu){
hist(means)
mse <- round(mean((means - mu)^2), 3)}
manipulate(myHist(mu), mu = slider(3,7, step = 0.1))
mean((means - 3)^2)
data.frame(means)
means<-data.frame(means)
g <- ggplot(aes(x = means))
View(means)
g <- ggplot(means, aes(x = means))
myHist <- function(mu){
g <- ggplot(means, aes(x = means))
g <- g + geom_histogram(fill = "salmon",binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((means - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(3,7, step = 0.1))
mean(means)
lamda<-0.2
means <- NULL
for (i in 1 : 1000) means<-c(means, mean(rexp(40,lamda)))
hist(means)
mean(means)
var(means)
25(sqrt(40))
25/(sqrt(40))
data(ToothGrowth)
View(ToothGrowth)
?ToothGrowth
?manipulate
library(UsingR)
install.packages(UsingR)
nosim <- 1000
cfunc <- function(x, n) 2 * sqrt(n) * (mean(x) - 0.5)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(0:1, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(0:1, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g
g <- g + stat_function(fun = dnorm, size = 2)
g
g + facet_grid(. ~ size)
?dnorm
stat_fucntion
?stat_function
x <- rnorm(100
)
base <- qplot(x, geom = "density")
base + stat_function(fun = dnorm, colour = "red")
base + stat_function(fun = dnorm, colour = "red", arg = list(mean = 3))
nosim <- 1000
cfunc <- function(x, n) 2 * sqrt(n) * (mean(x) - 0.5)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(0:1, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(0:1, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
data(ToothGrowth)
view(ToothGrowth)
View(ToothGrowth)
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- ggplot(ToothGrowth, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g + facet_grid(. ~ supp)
g <- ggplot(ToothGrowth, aes(x = len, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g + facet_grid(. ~ supp)
g <- ggplot(ToothGrowth, aes(x = len)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g + facet_grid(. ~ supp)
t<-ToothGrowth
t$dose<-factor(t$dose)
g <- ggplot(t, aes(x = dose)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- ggplot(t, aes(x = len)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g + facet_grid(. ~ dose)
g <- ggplot(t, aes(x = dose)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- ggplot(t, aes(x = dose,fill=len)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g + facet_grid(. ~ dose)
g + facet_grid(. ~ supp)
View(t)
t
t1<-group_by(t,dose,supp)
library(dplyr)
t1<-group_by(t,dose,supp)
t2<-summarize(t1,mean_growth=mean(len))
t2
g <- ggplot(t, aes(x = dose)) + geom_bar()
g <- ggplot(t2, aes(x = supp,fill=mean_growth)) + geom_bar()
g + facet_grid(. ~ dose)
g <- ggplot(t2, aes(x = supp)) + geom_bar()
g + facet_grid(. ~ dose)
g <- ggplot(t2, aes(x = supp,y=mean_growth)) + geom_bar()
g + facet_grid(. ~ dose)
g <- ggplot(t2, aes(x = supp)) + geom_bar(stat="bin")
g + facet_grid(. ~ dose)
g <- ggplot(t2, aes(x = supp)) + geom_bar(aes(y=mean_growth))
g + facet_grid(. ~ dose)
g <- ggplot(t2, aes(x = supp,y=mean_growth)) + geom_bar(stat="identity")
g + facet_grid(. ~ dose)
?ToothGrowth
t<-ToothGrowth
t1<-filter(t,does=1)
t1<-filter(t,does==1)
t1<-filter(t,dose==1)
t1
?len
?length
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child~parent,galton)
plot((jitter(child,4)~parent,galton)
plot((jitter(child,4)~parent,galton))
plot(jitter(child,4)~parent,galton)
regrline<-lm(child~parent,galton)
abline(regrline,lwd=3,col='red')
summary(regrline)
fit<-lm(child~parent,galton)
summary(fit)
mean(fir$residuals)
mean(fit$residuals)
cov(fit$residuals,galton$parent)
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
varChild<-var(galton$child)
varRes<-var(fit$residuals)
var(est(ols.slope,ols.ic))
varEst<-var(est(ols.slope,ols.ic))
all.equal(varChild,varRes+varEst)
efit<-lm(accel~mag+dist,attenu)
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
cor(gpa_nor,gch_nor)
l_nor<-lm(gch_nor~gpa_nor)
lm(child~parent,galton)
fit<-lm(child~parent,galton)
sqrt(sum(fit$residuals^2))/(n-2)
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu<-mean(galton$child)
sTot<-sum((galton$child-mu)^2)
sRes<-deviance(galton$child,fit$residuals)
sRes<-sum((fit$residuals)^2)
sRes <- deviance(fit)
1-(sRes/sTot)
1-sRes/sTot
summary(fit)$r.squared
(cor(galton$child,galton$parent))^2
cor(galton$parent,galton$child)^2
ones<-rep(1,nrow(galton))
lm(child~pnes+parent-1,galton)
lm(child~ones+parent-1,galton)
lm(child ~ parent, galton)
lm(child ~ 1,galton)
head(trees)
fit<-lm(Volume~Girth+Height+Constant-1,trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <-
| lm(Volume ~ Height + Constant -1, trees2)
fit2 <-lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
0.5
3.5
expect_dice
dice_high
expect
expect_dice(dice_high)
expect_dice(dice_low)
.5 *( E(X_hi)+E(X_lo) )
.5 *(edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
dice_sqr
ex2_fair<-dice_sqr*PDF
ex2_fair<-dice_sqr*dice_fair
ex2_fair <- sum(dice_fair * dice_sqr)
ex2_fair-3.5
ex2_fair-3.5^2
sum(dice_high * dice_sqr)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(n)
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
sd(c(1,1,1,1,1,0,0,0,0,0))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
install.packages("Rcpp")
library(shiny)
library(Rcpp)
setwd("C:/Users/aparna/Desktop/Repository/DataProducts")
runApp()
runApp()
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
View(trainSA)
trainSA$chd<-as.factor(trainSA$chd)
testSA$chd<-as.factor(testSA$chd)
modfit<-train(chd~age+alcohol+obesity+tobacco,model="rpart",data=trainSA)
library(caret)
modfit<-train(chd~age+alcohol+obesity+tobacco,model="rpart",data=trainSA)
age<-57
alcohol<-19.44
obseity<-27.30
obesity<-27.30
tobacco<-5.76
data.frame(age,alco)
data.frame(age,alcohol,obesity,tobacco)
in<-data.frame(age,alcohol,obesity,tobacco)
inp<-data.frame(age,alcohol,obesity,tobacco)
pred(modfit,newdata=inp)
pred<-predict(modfit,newdata=inp)
pred
runApp()
runApp()
verbatimTextOutput("inputAge"),
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
chdRisk<-function(age,alcohol,obesity,tobacco) {
library(caret)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
inp<-data.frame(age,alcohol,obesity,tobacco)
modfit<-train(chd~age+alcohol+obesity+tobacco,model="rpart",data=SAheart)
pred<-predict(train, newdata=inp)
print(pred)
return(pred)
}
chdRisk(25,25,25,25)
warnings()\
warnings()
chdRisk<-function(age,alcohol,obesity,tobacco) {
library(caret)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
inp<-data.frame(age,alcohol,obesity,tobacco)
modfit<-train(chd~age+alcohol+obesity+tobacco,model="glm",family="binomial",data=SAheart)
pred<-predict(train, newdata=inp)
print(pred)
return(pred)
}
chdRisk(57,19.44,27.3,5.76)
library(caret)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
modfit<-train(chd~age+alcohol+obesity+tobacco,model="glm",family="binomial",data=SAheart)
age<-57
alcohol<-19.44
obesity<-27.3
tobacco<-5.76
imp<-data.frame(age,alcohol,obesity,tobacco)
pred<-predict(modfit,newdata=imp)
library(caret)
library(ElemStatLearn)
data(SAheart)
SAheart$chd<-as.factor(SAheart$chd)
set.seed(8484)
inp<-data.frame(age,alcohol,obesity,tobacco)
modfit<-train(chd~age+alcohol+obesity+tobacco,model="glm",family="binomial",data=SAheart)
pred<-predict(train, newdata=inp)
print(pred)
library(caret)
library(ElemStatLearn)
data(SAheart)
SAheart$chd<-as.factor(SAheart$chd)
set.seed(8484)
inp<-data.frame(age,alcohol,obesity,tobacco)
modfit<-train(chd~age+alcohol+obesity+tobacco,model="glm",family="binomial",data=SAheart)
pred<-predict(modfit, newdata=inp)
print(pred)
shiny::runApp()
shiny::runApp()
shiny::runApp()
summary(SAheart
)
?SAheart
data(iris)
?iris
View(iris)
summary(iris)
shiny::runApp()
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='prith189',
token='965C7566A6861C6EF15AAEF93109836B',
secret='<SECRET>')
library(shinyappa)
library(shinyapps)
install.packages('shinyapps')
library(shinyapps)
devtools::install_github('rstudio/shinyapps')
install.packages("RCurl")
install.packages("RCurl")
devtools::install_github('rstudio/shinyapps')
install.packages("digest")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::setAccountInfo(name='prith189',
token='965C7566A6861C6EF15AAEF93109836B',
secret='<SECRET>')
shinyapps::setAccountInfo(name='prith189', token='965C7566A6861C6EF15AAEF93109836B', secret='EFBNng4ONQmjrNdOlhvyFHVbJT15WWgkaxHJHuow')
setwd("C:/Users/aparna/Desktop/Repository/DataProducts")
library(shiny)
deployApp()
install.packages('Rtools')
deployApp()
deployApp()
